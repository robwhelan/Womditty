<div>
    <input id="pac-input" class="controls" type="text" placeholder="Search Box">
  	<div id="mapCanvas" style="height:300px;"/></div>
	<div id="resultsDiv"></div>
	<p id="group" class="hidden"><%= @group %></p>
	<p id="user" class="hidden"><%= current_user.id %></p>
	<p id="csrf_token" class="hidden"><%= form_authenticity_token %></p>
</div>

<%= content_for :head do %>
<style type="text/css">
      html { height: 100% }
      body { height: 100%; margin: 0; padding: 0; }
      /* #mapCanvas { height: 500px; width:500px; } */

		#pac-input {
        background-color: #fff;
        padding: 0 11px 0 13px;
        width: 300px;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        text-overflow: ellipsis;
      }

      #pac-input:focus {
        border-color: #4d90fe;
        margin-left: -1px;
        padding-left: 14px;  /* Regular padding-left + 1. */
        width: 401px;
      }

      .pac-container {
        font-family: Roboto;
      }

      #type-selector {
        color: #fff;
        background-color: #4d90fe;
        padding: 5px 11px 0px 11px;
      }

      #type-selector label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }
      
    </style>
<% end %>

<script type="text/javascript"
src="http://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyAkmQDcP4u6gG5IULRLAiEjnfpE3vhYUOw&sensor=true">
</script>

<%= content_for :javascript do %>

<script type="text/javascript">

var map;
var service;
var infowindow;
var request;
var markers = [];

function attachInfoWindowSingle(marker) {
	var group = $('#group').html();
	var user = $('#user').html();
	var body = encodeURI(marker.name);
	var token = $('#csrf_token').html();
	var reference = escape(marker.reference);
	var action = '/pages/attach_item?post[body]=' + body + '&post[group_id]=' + group + 
				 '&post[user_id]=' + user + '&post[post_type]=location' + '&post[place_reference]=' + reference; 
	
  google.maps.event.addListener(marker, 'click', function() {
	$('#resultsDiv').html(
		'<div class="row">' +
		'<div class="panel panel-default">' +
		'<div class="panel-body">' +
		'<div class="col-xs-6">' +
		'<h4>' + marker.name + '</h4>' +
		'</div>' +
		'<div class="col-xs-4">' +
		'<p>' + marker.address + '</p>' +
		'</div>' +
		'<div class="col-xs-1"><form action=' + action + ' class="button_to" method="post"><div>' +
		'<button class="btn btn-primary" type="submit"><span class="glyphicon glyphicon-paperclip"></span></button>' +
		'<input name="authenticity_token" type="hidden" value=' + token + '></div></form>' +
		'</div>' +
		'</div>');
  });
}
function attachInfoWindow(marker, markers, num) {
	var group = $('#group').html();
	var user = $('#user').html();
	var body = encodeURI(markers[num].name);
	var token = $('#csrf_token').html();
	var reference = escape(markers[num].reference);
	var action = '/pages/attach_item?post[body]=' + body + '&post[group_id]=' + group + 
				 '&post[user_id]=' + user + '&post[post_type]=location' + '&post[place_reference]=' + reference; 
	
  google.maps.event.addListener(marker, 'click', function() {
	$('#resultsDiv').html(
		'<div class="row">' +
		'<div class="panel panel-default">' +
		'<div class="panel-body">' +
		'<div class="col-xs-6">' +
		'<h4>' + markers[num].name + '</h4>' +
		'</div>' +
		'<div class="col-xs-4">' +
		'<p>' + markers[num].address + '</p>' +
		'</div>' +
		'<div class="col-xs-1"><form action=' + action + ' class="button_to" method="post"><div>' +
		'<button class="btn btn-primary" type="submit"><span class="glyphicon glyphicon-paperclip"></span></button>' +
		'<input name="authenticity_token" type="hidden" value=' + token + '></div></form>' +
		'</div>' +
		'</div>');
  });
}

function callbackSingle(result, status) {
  if (status == google.maps.places.PlacesServiceStatus.OK) {
      	var marker = new google.maps.Marker({
        	map: map,
        	name: result.name,
        	position: result.geometry.location,
			reference: result.reference,
			address: result.formatted_address
      	}); // end marker construction
		attachInfoWindowSingle(marker);
		
	}; // end if
}; // end callback

	function callback(results, status) {
	  if (status == google.maps.places.PlacesServiceStatus.OK) {
	    for (var i = 0; i < results.length; i++) {
	      	var marker = new google.maps.Marker({
	        	map: map,
	        	name: results[i].name,
	        	position: results[i].geometry.location,
				reference: results[i].reference,
				address: results[i].formatted_address
	      	}); // end marker construction
			markers.push(marker);
			attachInfoWindow(marker, markers, i);
	  		};// end for loop
	
			//createMarkerClickListener(markers, i);
			
		}; // end if
	}; // end callback
		
      function initialize() {
		var mapOptions = {
			center: new google.maps.LatLng(32.8409143,-79.9827432),
			zoom: 11
		}

		map = new google.maps.Map(document.getElementById("mapCanvas"), mapOptions);

		// build search box
		var input = /** @type {HTMLInputElement} */(
	      	document.getElementById('pac-input'));
	  		map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
	  
		var searchBox = new google.maps.places.SearchBox(
			/** @type {HTMLInputElement} */(input));
		
		google.maps.event.addListener(searchBox, 'places_changed', function() {
		    var places = searchBox.getPlaces();

		    for (var i = 0, marker; marker = markers[i]; i++) {
		      marker.setMap(null);
		    }

		    // For each place, get the icon, place name, and location.
		    markers = [];
		    var bounds = new google.maps.LatLngBounds();
		    for (var i = 0; i < places.length; i++) {

		      // Create a marker for each place.
		      var marker = new google.maps.Marker({
		        map: map,
		        name: places[i].name,
		        position: places[i].geometry.location,
				address: places[i].formatted_address,
				reference: places[i].reference
		      });

			  markers.push(marker);
			  attachInfoWindow(marker, markers, i);
			
		      bounds.extend(places[i].geometry.location);
		    } // for loop

		    map.fitBounds(bounds);
		  });
		
		  google.maps.event.addListener(map, 'bounds_changed', function() {
		    var bounds = map.getBounds();
		    searchBox.setBounds(bounds);
		  });
		
	
		<% if @query %>
			request = {
				location: new google.maps.LatLng(32.8409143,-79.9827432),
				query: '<%= @query %>',
				radius: '500'
			};
			
			service = new google.maps.places.PlacesService(map);
		  	service.textSearch(request, callback);

		<% elsif @reference %>
			request = {
		  		reference: '<%= @reference %>'
			};
		
			service = new google.maps.places.PlacesService(map);
			service.getDetails(request, callbackSingle);

		<% end %>
		
	}// initialize

	google.maps.event.addDomListener(window, 'load', initialize);
    
    </script>

<% end %>